class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> ans=new ArrayList<>();
        List<Integer> output=new ArrayList<>();
        Arrays.sort(candidates);
        solve(candidates,output,0,ans,target);

        return ans;
    }
    public void solve(int[] candidates,List<Integer> output,int index,List<List<Integer>> ans,int target)
    {
        if(target==0)
        {
            ans.add(new ArrayList<>(output));
            return;
        }
        //include
        for(int i=index;i<candidates.length;i++)
        {
            if(i>index && candidates[i]==candidates[i-1])
            {
                continue;
            }
            if(candidates[i]>target)
            {
                break;
            }
            output.add(candidates[i]);
            solve(candidates,output,i+1,ans,target-candidates[i]);
            output.remove(output.size()-1);
        }


    }
}
