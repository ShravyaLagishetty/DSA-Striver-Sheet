class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        Deque<Integer> dq= new ArrayDeque<>();
        int n=nums.length;
        int[] ans=new int[n-k+1];
        int index=0;

        //1st window
        for(int i=0;i<k;i++)
        {
            while(dq.size()>0 && nums[dq.peekLast()]<=nums[i])
            {
                dq.removeLast();
            }
            dq.addLast(i);
        }
        ans[index++] = nums[dq.peekFirst()];
        
        
        for(int i=k;i<n;i++)
        {
            while(dq.size()>0 && dq.peekFirst()<=i-k)
            {
                dq.removeFirst();
            }

            while(dq.size()>0 && nums[dq.peekLast()]<nums[i])
            {
                dq.removeLast();
            }
            dq.addLast(i);
            ans[index++] = nums[dq.peekFirst()];

        }

        return ans;
        
        
    }
}
